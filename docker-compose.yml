services:
  db:
    image: postgres
    env_file: .env
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - 8080:8080
    container_name: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy

  product:
    build: ./api/product
    ports:
      - 4000:4000
    command: npm run dev
    restart: always
    env_file: ./api/product/.env
    volumes:
      - ./api/product:/app/product
    depends_on:
      db:
        condition: service_healthy

  uploadimage:
    build: ./api/uploadimage
    ports:
      - 3000:3000
    command: npm run dev
    restart: always
    env_file: ./api/uploadimage/.env
    volumes:
      - ./api/uploadimage:/app/uploadimage
    depends_on:
      db:
        condition: service_healthy

  auth:
    build: ./api/auth
    ports:
      - 6000:6000
    command: npm run dev
    restart: always
    env_file: ./api/auth/.env
    volumes:
      - ./api/auth:/app/auth
    depends_on:
      db:
        condition: service_healthy

  client:
    build: ./client
    command: npm run dev
    restart: always
    ports:
      - 5173:5173
    environment:
      - VITE_API_URL=http://localhost:5000/graph
    volumes:
      - ./client:/app/
      - /app/node_modules
